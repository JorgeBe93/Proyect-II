/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import bean.AuditoriaSistema;
import bean.Cliente;
import bean.ConsumoProSer;
import bean.FacturaCobro;
import bean.Habitacion;
import bean.NumberToText;
import bean.ProductoServicio;
import bean.Reserva;
import java.sql.Connection;
import java.sql.DriverManager;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Vladimir
 */
public class ReservaEditar extends javax.swing.JFrame {
    public static Reserva reserva;
    private int diferencia;
    private int dias;
    public Date auxIn = reserva.getCheckIn();
    public Date auxOut = reserva.getCheckOut();
    FacturaCobro f=new FacturaCobro();
    /**
     * Creates new form ReservaEditar
     */
    public ReservaEditar() {
        initComponents();
        inicializarReserva();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tf_cantidadPersonas = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tf_montoAbonado = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jc_checkin = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jc_checkout = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tf_montoTotal = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tf_precioCategoria = new javax.swing.JTextField();
        tf_numeroHabitacion = new javax.swing.JTextField();
        btn_calcularMonto = new javax.swing.JButton();
        btn_buscar = new javax.swing.JButton();
        tf_categoriaHabitacion = new javax.swing.JTextField();
        tf_cedulaCliente = new javax.swing.JTextField();
        lbl_pago = new javax.swing.JLabel();
        list_pago = new javax.swing.JComboBox();
        lbl_codReserva = new javax.swing.JLabel();
        tf_codReserva = new javax.swing.JTextField();
        tf_cliente = new javax.swing.JTextField();
        lbl_presupuesto = new javax.swing.JLabel();
        tf_presupuesto = new javax.swing.JTextField();
        panel_CrearReserva = new javax.swing.JPanel();
        lbl_BuscarRol = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btn_modificar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(722, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(636, 450));

        jLabel2.setText("Cédula Cliente:");

        jLabel3.setText("Cant Personas:");

        tf_cantidadPersonas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_cantidadPersonasKeyTyped(evt);
            }
        });

        jLabel4.setText("Monto Abonado:");

        tf_montoAbonado.setText("0");
        tf_montoAbonado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_montoAbonadoFocusLost(evt);
            }
        });
        tf_montoAbonado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_montoAbonadoKeyTyped(evt);
            }
        });

        jLabel1.setText("Check In:");

        jLabel5.setText("Check Out:");

        jc_checkout.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jc_checkoutFocusLost(evt);
            }
        });

        jLabel6.setText("Categoría Habitación:");

        jLabel7.setText("N° Habitación:");

        jLabel8.setText("Monto Total:");

        tf_montoTotal.setEnabled(false);
        tf_montoTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_montoTotalActionPerformed(evt);
            }
        });

        jLabel11.setText("Precio de Categoría:");

        tf_precioCategoria.setEnabled(false);

        tf_numeroHabitacion.setEnabled(false);
        tf_numeroHabitacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_numeroHabitacionFocusLost(evt);
            }
        });

        btn_calcularMonto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icon-money.png"))); // NOI18N
        btn_calcularMonto.setText("Calcular Monto Total");
        btn_calcularMonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_calcularMontoActionPerformed(evt);
            }
        });

        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        btn_buscar.setText("Buscar Habitación");
        btn_buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_buscarMouseClicked(evt);
            }
        });
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        tf_categoriaHabitacion.setEnabled(false);

        tf_cedulaCliente.setEnabled(false);
        tf_cedulaCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_cedulaClienteFocusLost(evt);
            }
        });

        lbl_pago.setText("Forma Pago:");

        list_pago.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Contado", "Crédito" }));

        lbl_codReserva.setText("Código Reserva:");

        tf_codReserva.setEnabled(false);

        tf_cliente.setEnabled(false);

        lbl_presupuesto.setText("Según Presupuesto n°:");

        tf_presupuesto.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tf_precioCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tf_numeroHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_buscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_calcularMonto)
                                .addGap(26, 26, 26))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(lbl_codReserva)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 35, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tf_codReserva, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_cedulaCliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tf_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lbl_presupuesto)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tf_presupuesto))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jc_checkin, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jc_checkout, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_categoriaHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(105, 105, 105)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(lbl_pago)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(list_pago, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_cantidadPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_montoAbonado, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_montoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_codReserva)
                    .addComponent(tf_codReserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_presupuesto)
                    .addComponent(tf_presupuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_cedulaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jc_checkin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(tf_cantidadPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jc_checkout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(tf_montoAbonado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_categoriaHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(lbl_pago)
                    .addComponent(list_pago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(tf_precioCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(tf_montoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_numeroHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(btn_calcularMonto)
                    .addComponent(btn_buscar))
                .addGap(123, 123, 123))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 97, -1, 337));

        panel_CrearReserva.setBackground(new java.awt.Color(0, 153, 255));
        panel_CrearReserva.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        lbl_BuscarRol.setFont(new java.awt.Font("Corbel", 1, 30)); // NOI18N
        lbl_BuscarRol.setForeground(new java.awt.Color(255, 255, 255));
        lbl_BuscarRol.setText("Modificar Reserva");

        javax.swing.GroupLayout panel_CrearReservaLayout = new javax.swing.GroupLayout(panel_CrearReserva);
        panel_CrearReserva.setLayout(panel_CrearReservaLayout);
        panel_CrearReservaLayout.setHorizontalGroup(
            panel_CrearReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_CrearReservaLayout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addComponent(lbl_BuscarRol)
                .addContainerGap(206, Short.MAX_VALUE))
        );
        panel_CrearReservaLayout.setVerticalGroup(
            panel_CrearReservaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_CrearReservaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_BuscarRol)
                .addContainerGap())
        );

        getContentPane().add(panel_CrearReserva, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 11, 636, -1));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_modificar.setText("Modificar");
        btn_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarActionPerformed(evt);
            }
        });

        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btn_modificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(btn_cancelar)
                .addGap(26, 26, 26))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cancelar)
                    .addComponent(btn_modificar))
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 469, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarActionPerformed
        // TODO add your handling code here:
        String antes;
        String despues;
        String letras;
        int monto_fac;
          DateFormat form=new SimpleDateFormat("dd-MM-yyyy");
        java.util.Date fecha = new Date();
        //JOptionPane.showConfirmDialog(null, fecha);
        if ( auxIn.equals(jc_checkin.getDate())
                && auxOut.equals(jc_checkout.getDate())
                 ){
                if ((jc_checkin.getDate() != null)
                    && (jc_checkout.getDate() != null)
                    && !tf_montoTotal.getText().equals("")
                    && !tf_cantidadPersonas.getText().equals("")
                    && !tf_numeroHabitacion.getText().equals("")
                    && !tf_numeroHabitacion.getText().equals("")
                    && !tf_cedulaCliente.getText().equals(""))
                {
                    if(jc_checkin.getDate().before(jc_checkout.getDate())
                        && Integer.parseInt(tf_montoAbonado.getText()) <= Integer.parseInt(tf_montoTotal.getText())
                        //      &&jc_checkin.getDate().after(fecha)
                        //      &&jc_checkin.getDate().after(fecha)
                    ){
                        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
                        String dIN = format.format(jc_checkin.getDate());
                        String dOUT = format.format(jc_checkout.getDate());
                        Date dateIn = null;
                        Date dateOut = null;
                        try {
                            dateIn = format.parse(dIN);
                            dateOut = format.parse(dOUT);
                        } catch (ParseException ex) {
                            System.out.println("Formateo de fechas fallido");
                        }

                        Habitacion habitacion = new Habitacion();
                        Cliente cliente  = obtenerCliente();
                        int respuesta = JOptionPane.showConfirmDialog(null, "¿Confirma el registro?");
                        if (respuesta == JOptionPane.YES_OPTION){

                            EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
                            EntityManager ema = fact.createEntityManager();
                            Reserva reservaLocal = new Reserva();
                            //antes de los cambios
                            antes = reserva.toString();
                            ema.getTransaction().begin();
                            reservaLocal.setCodigoReserva(reserva.getCodigoReserva());
                            reservaLocal.setCantPersonas(Integer.parseInt(tf_cantidadPersonas.getText()));
                            reservaLocal.setCheckIn(dateIn);
                            reservaLocal.setCheckOut(dateOut);
                            reservaLocal.setNumPresupuesto(reserva.getNumPresupuesto());
                            //reserva.setCheckOut(format.parse(format.format(jc_checkout.toString())));
                            reservaLocal.setCodigoCliente(cliente);
                            if (tf_montoAbonado.getText().equals(""))
                                reservaLocal.setMontoAbonado(0);
                            else
                                reservaLocal.setMontoAbonado(Integer.parseInt(tf_montoAbonado.getText()));
                                reservaLocal.setMontoTotal(Integer.parseInt(tf_montoTotal.getText()));
                                //consulta para obtener habitacion
                                Query query = ema.createNamedQuery("Habitacion.findByNumero");
                                query.setParameter("numero", Integer.parseInt(tf_numeroHabitacion.getText()));
                                habitacion = (Habitacion)query.getSingleResult();
                                reservaLocal.setNumHabitacion(habitacion);
                                ema.merge(reservaLocal);
                                ema.flush();
                                //despues de los cambios
                                despues = reservaLocal.toString();
                                //guardamos el consumo
                             if(!"0".equals(tf_montoAbonado.getText())){
                                int codigo=reservaLocal.getCodigoReserva();
                                //saldo de la reserva
                                diferencia=Integer.parseInt(tf_montoTotal.getText())-Integer.parseInt(tf_montoAbonado.getText());
                                query=ema.createNativeQuery("SELECT * FROM consumo_pro_ser c "
                                 + "INNER JOIN reserva r "
                                + "on r.codigoReserva = c.codigoReserva "
                                + "WHERE c.codigoReserva="
                                +codigo, ConsumoProSer.class);
                                List<ConsumoProSer> cps=query.getResultList();
                                if(!cps.isEmpty()){
                                    query= ema.createNativeQuery( "SELECT * FROM producto_servicio p "
                                    + "WHERE p.nombre LIKE "
                                    +"'%saldo de reserva%'", ProductoServicio.class);
                                    List<ProductoServicio> p=query.getResultList();
                                    if(p.isEmpty()){
                                     JOptionPane.showMessageDialog(null,"Registre un Producto/Servicio con el nombre de 'saldo de reserva'"
                                            + "para guardar el saldo de la reserva", "Error",JOptionPane.ERROR_MESSAGE);
                                            return;
                                    }
                                    ConsumoProSer cp=new ConsumoProSer();
                                    cp.setCodigoConsumo(cps.get(0).getCodigoConsumo());
                                    System.out.print(cps.get(0).getCodigoConsumo());
                                    cp.setCodigoReserva(reservaLocal);
                                    cp.setCantidad(dias);
                                    cp.setTotal(diferencia);
                                    cp.setCodigoPS(p.get(0));
                                    ema.merge(cp);
                                    ema.flush();

                                }else{
                                        query= ema.createNativeQuery( "SELECT * FROM producto_servicio p "
                                         + "WHERE p.nombre LIKE "
                                         +"'%saldo de reserva%'", ProductoServicio.class);
                                         List<ProductoServicio> p=query.getResultList();
                                         if(p.size()==0){
                                                 JOptionPane.showMessageDialog(null,"Registre un Producto/Servicio con el nombre de 'saldo de reserva'"
                                                 + "para guardar el saldo de la reserva", "Error",JOptionPane.ERROR_MESSAGE);
                                                 return;
                                         }
                                        ConsumoProSer cp=new ConsumoProSer();
                                        cp.setCodigoReserva(reservaLocal);
                                        cp.setCantidad(dias);
                                        cp.setTotal(diferencia);
                                        cp.setCodigoPS(p.get(0));
                                        ema.persist(cp);
                                        ema.flush();
                                }  
                                monto_fac=reservaLocal.getMontoAbonado()-reserva.getMontoAbonado();
                                 //generamos la factura
                                 f.setCodigoReserva(reserva);
                                 f.setConcepto("anticipo de reserva");
                                if("".equals(reserva.getCodigoCliente().getRuc())){
                                      f.setRucCliente(reserva.getCodigoCliente().getCedula());
                                }else{
                                      f.setRucCliente(reserva.getCodigoCliente().getRuc());
                                }
                                f.setFechaEmision(form.format(fecha));
                                f.setTotal(monto_fac);
                                f.setTipoFactura((String) list_pago.getSelectedItem());
                                ema.persist(f);
                                ema.flush();

                            }
                            //creacion de auditoria de sistema
                            AuditoriaSistema as=new AuditoriaSistema();
                            as.setAccion("Modificación");
                            as.setTabla("Reserva");
                            as.setAntes(antes);
                            as.setDespues(despues);
                            //trabajamos con la fecha
                            DateFormat formato=new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
                            as.setFechaHora(formato.format(fecha));
                            as.setUsuario(LoginView.nombreUsuario);
                            ema.persist(as);
                            ema.flush();
                            ema.getTransaction().commit();
                            ema.close();
                            JOptionPane.showMessageDialog(null, "Modificación Exitosa");
                            this.dispose();
                            //mostramos la factura
                            if(!"0".equals(tf_montoAbonado.getText())){
                                 try
                                {
                                     //convertimos el numero en letras
                                    NumberToText nt=new NumberToText();
                                    letras=nt.convertirLetras(f.getTotal());
                                    System.out.print(letras);
                                    Class.forName("com.mysql.jdbc.Driver");
                                    Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel db", "root", "user");
                                    HashMap par = new HashMap();//no definimos ningún parámetro por eso lo dejamos así
                                    Map parametros=new HashMap();
                                    System.out.print(f.getNumFactura());
                                    par.put("Letras", letras);
                                    par.put("NumFactura",f.getNumFactura() );
                                    par.put("Saldo", diferencia);
                                    JasperPrint jp = JasperFillManager.fillReport("C:/Proyecto-II/src/reportes/facturaAnticipo.jasper", par,con);//el primer parámetro es el camino del archivo, se cambia esta dirección por la dirección del archivo .jasper
                                    JasperViewer jv = new JasperViewer(jp,false);
                                    jv.setVisible(true);
                                    jv.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                                }
                                catch(Exception e)
                                {
                                    e.printStackTrace();
                                }
                            }
                        }
                        else{
                            this.dispose();
                        }
                    }else{
                        JOptionPane.showMessageDialog(null, "Datos Invalidos o Incompletos "
                            + "impiden el registro");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Datos Invalidos o Incompletos "
                        + "impiden el registro");
                }
        }else{
                JOptionPane.showMessageDialog(null, "Debe buscar una habitación "
                        + "para las nuevas fechas");

           
        }
    }//GEN-LAST:event_btn_modificarActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void tf_cedulaClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_cedulaClienteFocusLost
        // TODO add your handling code here:
        Cliente cliente = obtenerCliente();
        int respuesta  = 0;
        if (cliente == null){
            if (!tf_cedulaCliente.getText().equals("")){
                respuesta = JOptionPane.showConfirmDialog(null, "Cliente Inexistente ¿Desea "
                        + "registrarlo en el sistema?");
                if (respuesta == JOptionPane.YES_OPTION){
                    JFrame frame=new ClienteCreate();
                    frame.setVisible(true);
                    frame.setTitle("Registar Cliente");
                    frame.setLocationRelativeTo(null);
                    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                    ClienteCreate.llamadaEditarReserva = "Invocado";
                    ClienteCreate.tf_cedula.setText(tf_cedulaCliente.getText());
                }else{
                    tf_cedulaCliente.setText("");
                    tf_cedulaCliente.requestFocus();
                }
            }
        }
    }//GEN-LAST:event_tf_cedulaClienteFocusLost

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        //tf_numeroHabitacion.setText("");
        //tf_categoriaHabitacion.setText("");
        //tf_precioCategoria.setText("");
        tf_montoTotal.setText("");
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");

        java.util.Date fecha = new Date();
        //JOptionPane.showMessageDialog(null, auxIn.equals(auxOut));
        try {
            fecha = obtenerFechaDia();
        } catch (ParseException ex) {
            System.out.println("Problemas con fechas");
        }
        if ((jc_checkin.getDate() != null) 
                && (jc_checkout.getDate() != null)){ 
            if( (jc_checkin.getDate().before(jc_checkout.getDate()))
                //&& (fecha.before(jc_checkin.getDate()))
                //&& (fecha.before(jc_checkout.getDate()))
                    ){
                    String LocalIn = format.format(jc_checkin.getDate());
                    String localOut = format.format(jc_checkout.getDate());
                    if(!LocalIn.equals(localOut)){
                        auxIn = jc_checkin.getDate();
                        auxOut = jc_checkout.getDate();
                        VerEstadodeHabitaciones.llamadaEditarReserva = "Invocado";
                        
                        verEstadosHabitaciones();
                    }
                    //creación de ventana
                    else{
                        JOptionPane.showMessageDialog(null, "Fechas Iguales");
                    }
            }
            else{
                JOptionPane.showMessageDialog(null, "Fechas Invalidas");
            }
        }
        else{
                JOptionPane.showMessageDialog(null, "Fechas Invalidas");  
        }
        
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void btn_calcularMontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calcularMontoActionPerformed
        // TODO add your handling code here:
        java.util.Date fecha = new Date();
        if(jc_checkin.getDate() != null 
                && jc_checkout.getDate() != null 
                && !tf_cantidadPersonas.getText().equals("")
                && !tf_precioCategoria.getText().equals("")){
            if (jc_checkin.getDate().before(jc_checkout.getDate())
                   // &&jc_checkin.getDate().after(fecha)
                   //&&jc_checkout.getDate().after(fecha)
                    ){
                final long MILLSECS_PER_DAY = 24 * 60 * 60 * 1000;
                long cantidadPersonas = Integer.parseInt(tf_cantidadPersonas.getText());
                long precioxnoche = Integer.parseInt(tf_precioCategoria.getText());
                long cantidadDias = (jc_checkout.getDate().getTime() - jc_checkin.getDate().getTime())/MILLSECS_PER_DAY;
               
                long precioTotal = cantidadPersonas * precioxnoche * cantidadDias;
             dias=(int)cantidadDias;
                tf_montoTotal.setText(Long.toString(precioTotal));
            }else{
                JOptionPane.showMessageDialog(null, "Fecha de checkin posterior a checkout");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Datos sin especificar");
        }
    }//GEN-LAST:event_btn_calcularMontoActionPerformed

    private void tf_numeroHabitacionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_numeroHabitacionFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_numeroHabitacionFocusLost

    private void jc_checkoutFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jc_checkoutFocusLost
        // TODO add your handling code here:
        //no acciona
        JOptionPane.showMessageDialog(null, "Algo paso");
        if (jc_checkin.getDate().after(jc_checkout.getDate()))
        JOptionPane.showMessageDialog(null, jc_checkin.getDate());
    }//GEN-LAST:event_jc_checkoutFocusLost

    private void tf_montoAbonadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_montoAbonadoKeyTyped
        // TODO add your handling code here:
        char ch=evt.getKeyChar();
        if(!Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tf_montoAbonadoKeyTyped

    private void tf_montoAbonadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_montoAbonadoFocusLost
        // TODO add your handling code here
        if(tf_montoAbonado.getText().length()==0){
            tf_montoAbonado.setText("0");
        }
        
    }//GEN-LAST:event_tf_montoAbonadoFocusLost

    private void tf_cantidadPersonasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_cantidadPersonasKeyTyped
        // TODO add your handling code here:
        char ch=evt.getKeyChar();
        if(!Character.isDigit(ch)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tf_cantidadPersonasKeyTyped

    private void btn_buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_buscarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_buscarMouseClicked

    private void tf_montoTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_montoTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_montoTotalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(final String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReservaEditar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReservaEditar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReservaEditar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReservaEditar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame=new ReservaEditar();
                frame.setVisible(true);
                frame.setTitle("Editar Reserva");
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.setLocationRelativeTo(null);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_calcularMonto;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_modificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public static com.toedter.calendar.JDateChooser jc_checkin;
    public static com.toedter.calendar.JDateChooser jc_checkout;
    private javax.swing.JLabel lbl_BuscarRol;
    private javax.swing.JLabel lbl_codReserva;
    private javax.swing.JLabel lbl_pago;
    private javax.swing.JLabel lbl_presupuesto;
    private javax.swing.JComboBox list_pago;
    private javax.swing.JPanel panel_CrearReserva;
    public static javax.swing.JTextField tf_cantidadPersonas;
    public static javax.swing.JTextField tf_categoriaHabitacion;
    public static javax.swing.JTextField tf_cedulaCliente;
    private javax.swing.JTextField tf_cliente;
    private javax.swing.JTextField tf_codReserva;
    public static javax.swing.JTextField tf_montoAbonado;
    public static javax.swing.JTextField tf_montoTotal;
    public static javax.swing.JTextField tf_numeroHabitacion;
    public static javax.swing.JTextField tf_precioCategoria;
    private javax.swing.JTextField tf_presupuesto;
    // End of variables declaration//GEN-END:variables
     private Date obtenerFechaDia() throws ParseException{
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Date fecha = new Date();
         /*int anho = fecha.get(Calendar.YEAR);
        int mes = fecha.get(Calendar.MONTH + 1);
        int dia = fecha.get(Calendar.DAY_OF_MONTH);
        String fechaActual = Integer.toString(anho) +"-"+Integer.toString(mes)
                 +"-"+Integer.toString(dia);
         */        
         return format.parse(format.format(fecha));
     }
        
     private void verEstadosHabitaciones(){
        JFrame ventana = new VerEstadodeHabitaciones();
        VerEstadodeHabitaciones.llamadaEditarReserva = "Invocado";
        ventana.setLocationRelativeTo(null);
        ventana.setTitle("Ver Estado de Habitaciones");
        ventana.setVisible(true); 
    }   
    private Cliente obtenerCliente() {
         EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
         EntityManager ema = fact.createEntityManager();
         Query clienteQuery = ema.createNamedQuery("Cliente.findByCedula");
         clienteQuery.setParameter("cedula", tf_cedulaCliente.getText());
         Cliente cliente = null;
         try{
            cliente = (Cliente)clienteQuery.getSingleResult();
            System.out.println(cliente);
         }catch(javax.persistence.NoResultException e){
             System.out.println(cliente);
         }
         ema.close();
         return cliente;
     }
    
    private void inicializarReserva(){
        tf_codReserva.setText(Integer.toString(reserva.getCodigoReserva()));
        if(reserva.getNumPresupuesto()==null){
            tf_presupuesto.setText("Sin presupuesto");
        }else{
            tf_presupuesto.setText(Integer.toString(reserva.getNumPresupuesto().getNumPresupuesto()));
        }
        tf_cedulaCliente.setText(reserva.getCodigoCliente().getCedula());
        tf_cliente.setText(reserva.getCodigoCliente().getNombre()+" "+reserva.getCodigoCliente().getApellido());
        tf_cantidadPersonas.setText(Integer.toString(reserva.getCantPersonas()));
        tf_montoAbonado.setText(Integer.toString(reserva.getMontoAbonado()));
        tf_montoTotal.setText(Integer.toString(reserva.getMontoTotal()));
        if(tf_montoAbonado.getText().equals(tf_montoTotal.getText())){
            tf_montoAbonado.setEnabled(false);
        }
        tf_numeroHabitacion.setText(Integer.toString(reserva.getNumHabitacion().getNumero()));
        tf_precioCategoria.setText(Integer.toString(reserva.getNumHabitacion().getCodigoCategoria().getCostoxnoche()));
        tf_categoriaHabitacion.setText(reserva.getNumHabitacion().getCodigoCategoria().getNombre());
        jc_checkin.setDate(reserva.getCheckIn());
        jc_checkout.setDate(reserva.getCheckOut());
    }
}
