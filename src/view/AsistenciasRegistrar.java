/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import bean.Asistencia;
import bean.Empleado;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;

/**
 *
 * @author Vladimir
 */
public class AsistenciasRegistrar extends javax.swing.JFrame {
    //private final  TextAutoCompleter textAutoCompleter;
    private float horas = 0;
    private String ExtraDescuento;
    /**
     * Creates new form AsistenciasRegistrar
     */
    public AsistenciasRegistrar() {
        initComponents();
        //this.textAutoCompleter = new TextAutoCompleter(tf_identificacion);
        //infijo
        //this.textAutoCompleter.setMode(0);
        //inicializarLista();
        inicializarFechaLabel();
        lbl_fechaHoy.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_BuscarRol = new javax.swing.JPanel();
        lbl_BuscarRol = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        tf_nombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tf_cargo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tf_apellido = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        tf_identificacion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btn_horaEntrada = new javax.swing.JButton();
        btn_horaSalida = new javax.swing.JButton();
        lbl_horaEntrada = new javax.swing.JLabel();
        lbl_horaSalida = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tf_horasTrabajas = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbl_fechaHoy = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btn_confirmar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        cb_tipoDIA = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel_BuscarRol.setBackground(new java.awt.Color(0, 153, 255));
        panel_BuscarRol.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        lbl_BuscarRol.setFont(new java.awt.Font("Corbel", 1, 30)); // NOI18N
        lbl_BuscarRol.setForeground(new java.awt.Color(255, 255, 255));
        lbl_BuscarRol.setText("Registrar Asistencia");

        javax.swing.GroupLayout panel_BuscarRolLayout = new javax.swing.GroupLayout(panel_BuscarRol);
        panel_BuscarRol.setLayout(panel_BuscarRolLayout);
        panel_BuscarRolLayout.setHorizontalGroup(
            panel_BuscarRolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_BuscarRolLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_BuscarRol)
                .addGap(127, 127, 127))
        );
        panel_BuscarRolLayout.setVerticalGroup(
            panel_BuscarRolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_BuscarRolLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_BuscarRol)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        tf_nombre.setEnabled(false);

        jLabel3.setText("Apellido:");

        tf_cargo.setEnabled(false);

        jLabel4.setText("Cargo:");

        tf_apellido.setEnabled(false);

        jLabel1.setText("Identificaci√≥n:");

        tf_identificacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf_identificacionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tf_identificacionFocusLost(evt);
            }
        });
        tf_identificacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_identificacionKeyTyped(evt);
            }
        });

        jLabel2.setText("Nombre:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tf_identificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_cargo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_apellido)
                    .addComponent(tf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tf_identificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tf_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tf_cargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        btn_horaEntrada.setText("Marcar Entrada");
        btn_horaEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_horaEntradaActionPerformed(evt);
            }
        });

        btn_horaSalida.setText("Marcar Salida");
        btn_horaSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_horaSalidaActionPerformed(evt);
            }
        });

        jLabel6.setText("Horas Trabajadas:");

        tf_horasTrabajas.setEnabled(false);

        jLabel8.setText("HH:mm");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btn_horaEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_horaSalida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_horaEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(lbl_horaSalida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_horasTrabajas, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel8)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_horaEntrada, btn_horaSalida});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_horaEntrada)
                    .addComponent(lbl_horaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_horaSalida)
                    .addComponent(lbl_horaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tf_horasTrabajas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btn_horaEntrada, btn_horaSalida});

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        jLabel5.setText("Fecha:");

        btn_confirmar.setText("Confirmar");
        btn_confirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_confirmarActionPerformed(evt);
            }
        });

        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(btn_confirmar)
                .addGap(46, 46, 46)
                .addComponent(btn_cancelar)
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_confirmar)
                    .addComponent(btn_cancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cb_tipoDIA.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Feriado" }));

        jLabel7.setText("Tipo de d√≠a:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panel_BuscarRol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(cb_tipoDIA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(lbl_fechaHoy, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 20, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_BuscarRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_fechaHoy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cb_tipoDIA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tf_identificacionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_identificacionFocusGained
       /* try{
            Empleado emple = obtenerEmpleado(tf_identificacion.getText());
            tf_nombre.setText(emple.getNombre());
            tf_apellido.setText(emple.getApellido());
            tf_cargo.setText(emple.getCodigoCargo().getNombre());
            System.out.println(emple);
           
        }catch(NullPointerException e){
            
            tf_nombre.setText("");
            tf_apellido.setText("");
            tf_cargo.setText("");
        }catch(NumberFormatException e){
            tf_nombre.setText("");
            tf_apellido.setText("");
            tf_cargo.setText("");
        }*/
    }//GEN-LAST:event_tf_identificacionFocusGained

    private void tf_identificacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_identificacionKeyTyped
        /*try{
            Empleado emple = obtenerEmpleado(tf_identificacion.getText());
            tf_nombre.setText(emple.getNombre());
            tf_apellido.setText(emple.getApellido());
            tf_cargo.setText(emple.getCodigoCargo().getNombre());
            System.out.println(emple);
           
        }catch(NullPointerException e){
            
            tf_nombre.setText("");
            tf_apellido.setText("");
            tf_cargo.setText("");
        }catch(NumberFormatException e){
            tf_nombre.setText("");
            tf_apellido.setText("");
            tf_cargo.setText("");
        }*/
    }//GEN-LAST:event_tf_identificacionKeyTyped

    private void btn_horaEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_horaEntradaActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat formato = new SimpleDateFormat("HH:mm");
        Date fechaHoy = new Date();
        int estado = verificarAsistenciaFechaHoy(tf_identificacion.getText());
        //entrada sin marcar
        if (estado == 0){
            lbl_horaEntrada.setText(formato.format(fechaHoy));
            btn_horaSalida.setEnabled(false);
            lbl_horaSalida.setText("Salida sin marcar");
        }//salida marcada
        else if(estado == 2){
            vaciarCampos();
            btn_horaEntrada.setEnabled(true);
            JOptionPane.showMessageDialog(null, "La hora de salida ya fue marcada");
            vaciarCampos();
        }
        else{//marcada
            Asistencia asist = obtenerAsistenciaFechaHoy(tf_identificacion.getText());
            lbl_horaEntrada.setText(formato.format(asist.getHoraEntrada()));
            btn_horaEntrada.setEnabled(false);
        }
    }//GEN-LAST:event_btn_horaEntradaActionPerformed

    private void tf_identificacionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf_identificacionFocusLost
        try{
            Empleado emple = obtenerEmpleado(tf_identificacion.getText());
            tf_nombre.setText(emple.getNombre());
            tf_apellido.setText(emple.getApellido());
            tf_cargo.setText(emple.getCodigoCargo().getNombre());
            System.out.println(emple);
           
        }catch(NullPointerException e){
            
            tf_nombre.setText("");
            tf_apellido.setText("");
            tf_cargo.setText("");
        }catch(NumberFormatException e){
            tf_nombre.setText("");
            tf_apellido.setText("");
            tf_cargo.setText("");
        }
    }//GEN-LAST:event_tf_identificacionFocusLost

    private void btn_confirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_confirmarActionPerformed
        // TODO add your handling code here:
        if(!tf_identificacion.getText().equals("")){
            if(!lbl_horaEntrada.getText().equals("")){
                if(!tf_nombre.getText().equals("")){
                    int respuesta = JOptionPane.showConfirmDialog(null, "¬øDesea confirmar la operaci√≥n?");
                    if (respuesta == JOptionPane.YES_OPTION){
                        NumberFormat nf = NumberFormat.getInstance();		
                        nf.setMaximumFractionDigits(2);
                        String horasCargar ;
                        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
                        SimpleDateFormat formatoHora = new SimpleDateFormat("HH:mm");
                        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
                        EntityManager ema = fact.createEntityManager();
                        ema.getTransaction().begin();
                        Asistencia asistencia;
                        if(obtenerAsistenciaFechaHoy(tf_identificacion.getText()) == null){
                            asistencia = new Asistencia();
                        }else{
                            asistencia = obtenerAsistenciaFechaHoy(tf_identificacion.getText());
                        }
                        Empleado empleado = obtenerEmpleado(tf_identificacion.getText());
                        asistencia.setCodigoEmpleado(empleado);

                        try {
                            //no cambian
                            asistencia.setFechaAsistencia(formato.parse(lbl_fechaHoy.getText()));
                            asistencia.setHoraEntrada(formatoHora.parse(lbl_horaEntrada.getText()));
                            if(cb_tipoDIA.getSelectedItem().toString().equals("Normal")){
                                asistencia.setEsDiaHabil("S");
                            }
                            else{
                                asistencia.setEsDiaHabil("N");
                            }
                            if(lbl_horaSalida.getText().equals("Salida sin marcar")){
                                asistencia.setHoraSalida(null);
                                ema.persist(asistencia);
                                ema.flush();
                            }else{
                                float horasHabiles = (float)8.00;
                                asistencia.setHoraSalida(formatoHora.parse(lbl_horaSalida.getText()));
                                //horas legales - horastrabajadas
                                float diferencia = horasHabiles - horas;
                                if(cb_tipoDIA.getSelectedItem().toString().equals("Normal")){
                                    if (diferencia == 0){
                                        float valorPorDefecto = 0;
                                        asistencia.setExtra(valorPorDefecto);
                                        asistencia.setHorasInconclusas(valorPorDefecto);
                                    } //8 - 9 = -1
                                    else if(diferencia < 0){
                                        float valorPorDefecto = 0;
                                        horasCargar = nf.format((diferencia * (-1))).replace(":", ".");
                                        asistencia.setExtra(Float.parseFloat(horasCargar.replace(",", ".")));
                                        asistencia.setHorasInconclusas(valorPorDefecto);
                                    }
                                    else if(diferencia > 0){ //8-7 = 1
                                        float valorPorDefecto = 0;
                                        horasCargar = nf.format(diferencia).replace(":", ".");
                                        asistencia.setExtra(valorPorDefecto);
                                        asistencia.setHorasInconclusas(Float.parseFloat(horasCargar.replace(",", ".")));
                                    }
                                }else{
                                        float valorPorDefecto = 0;
                                        horasCargar = nf.format(Float.toString(horas));
                                        asistencia.setExtra(Float.parseFloat(horasCargar.replace(",", ".")));
                                        asistencia.setHorasInconclusas(valorPorDefecto);
                                }
                                ema.merge(asistencia);
                                ema.flush();
                            }
                        } catch (ParseException ex) {
                            System.out.println("Error con las fechas");
                        }
                        ema.getTransaction().commit();
                        ema.clear();
                        JOptionPane.showMessageDialog(null, "Registro Exitoso");
                        this.dispose();
                    }else if(respuesta == JOptionPane.YES_NO_OPTION){
                        this.dispose();
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Empleado Inexistente");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Especifique la hora de entrada");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Especifique la identifcaci√≥n del empleado");
        }
    }//GEN-LAST:event_btn_confirmarActionPerformed

    private void btn_horaSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_horaSalidaActionPerformed
        SimpleDateFormat formato = new SimpleDateFormat("HH:mm");
        Date fechaHoy = new Date();
        
        NumberFormat nf = NumberFormat.getInstance();		
        nf.setMaximumFractionDigits(2);
        
        lbl_horaSalida.setText(formato.format(fechaHoy));
        //calcular horas trabajas
        String horaEntrada = "";
        String horaSalida = "";

        horaEntrada = (lbl_horaEntrada.getText());
        horaSalida = (lbl_horaSalida.getText());
        //System.out.println(horaEntrada + "   "+horaSalida);
        int entradaHora = Integer.parseInt(horaEntrada.substring(0,2));
        int entradaMinuto = Integer.parseInt(horaEntrada.substring(3,5));
        int salidaHora = Integer.parseInt(horaSalida.substring(0,2));
        int salidaMinuto = Integer.parseInt(horaSalida.substring(3,5));
        
        
        System.out.println( entradaHora+":"+entradaMinuto);
        int hora = 0;
        int minuto = 0;
        String horasTrabajadas = "";
        horasTrabajadas = calcularDiferencia(entradaHora, entradaMinuto, salidaHora, salidaMinuto);
        tf_horasTrabajas.setText(horasTrabajadas);
        
        horas = Float.parseFloat((horasTrabajadas.replaceAll(":", ".")));
        
        
        ExtraDescuento = calcularDiferencia(8, 0, salidaHora, salidaMinuto);
        System.out.println(ExtraDescuento);
        
        
        
        
        
        /*
        float horasTrabajo ;
        float MILI_PER_DAY = 60*60*1000;
        float diferencia = (float) 0.0;
        
        
        
        
        horasTrabajo = (float)((horaSalida-horaEntrada)/MILI_PER_DAY);
        String horaResta = nf.format(horasTrabajo).replaceAll(",", ":");
        diferencia = diferenciaMili(horaResta);
        System.out.println("horaresta = "+horaResta);
        horasTrabajo = (float)(((horaSalida-horaEntrada)/MILI_PER_DAY)- (diferencia*0.1));
        horaResta = nf.format(horasTrabajo).replaceAll(",", ":");
        
        if(horaResta.length() <= 3){
            tf_horasTrabajas.setText(horaResta+"0");
        }else{
            
            
            tf_horasTrabajas.setText(horaResta);
        }
        
        horas = Float.parseFloat((nf.format(horasTrabajo).replaceAll(",", ".")));*/
    }//GEN-LAST:event_btn_horaSalidaActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btn_cancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AsistenciasRegistrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AsistenciasRegistrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AsistenciasRegistrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AsistenciasRegistrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AsistenciasRegistrar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_confirmar;
    private javax.swing.JButton btn_horaEntrada;
    private javax.swing.JButton btn_horaSalida;
    private javax.swing.JComboBox cb_tipoDIA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lbl_BuscarRol;
    private javax.swing.JLabel lbl_fechaHoy;
    private javax.swing.JLabel lbl_horaEntrada;
    private javax.swing.JLabel lbl_horaSalida;
    private javax.swing.JPanel panel_BuscarRol;
    private javax.swing.JTextField tf_apellido;
    private javax.swing.JTextField tf_cargo;
    private javax.swing.JTextField tf_horasTrabajas;
    private javax.swing.JTextField tf_identificacion;
    private javax.swing.JTextField tf_nombre;
    // End of variables declaration//GEN-END:variables
    private void inicializarLista(){
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        Query query = ema.createNamedQuery("Empleado.findAll");
        List<Empleado> pro = query.getResultList();
        Iterator <Empleado> it = pro.iterator();
        while (it.hasNext()){
      //      textAutoCompleter.addItem(it.next().getCodigoEmpleado());
        }
        ema.close();
    }
    
    private Empleado obtenerEmpleado(String Identificacion){
        Empleado empleado = null;
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        ema.getTransaction().begin();
        Query query = ema.createNamedQuery("Empleado.findByCodigoEmpleado");
        query.setParameter("codigoEmpleado", Integer.parseInt(Identificacion));
        //List<Empleado> emple = query.getResultList();
        
        try{
            empleado = (Empleado)query.getSingleResult();
            //empleado = emple.get(0);  
        }catch(javax.persistence.NoResultException e){
            empleado = null;
        }
        
        ema.close();
        return empleado;
    }
    private void inicializarFechaLabel(){
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        Date Fecha = new Date();
        lbl_fechaHoy.setText(formato.format(Fecha));
    }
    private int verificarAsistenciaFechaHoy(String Identificacion){
        int estado = 0;
        SimpleDateFormat formatoHora = new SimpleDateFormat("HH:mm");
        Asistencia asist = obtenerAsistenciaFechaHoy(Identificacion);
        if(asist != null){
            if(asist.getHoraEntrada() != null){
                btn_horaEntrada.setEnabled(false);
                lbl_horaEntrada.setText(formatoHora.format(asist.getHoraEntrada()));
                estado = 1;
            }
            if(asist.getHoraSalida() != null){
                estado = 2;
            }
        }
        return estado;
    }
    private Asistencia obtenerAsistenciaFechaHoy(String Identificacion){
        Asistencia asistencia = null;
        EntityManagerFactory fact = Persistence.createEntityManagerFactory("proyectoPU");
        EntityManager ema = fact.createEntityManager();
        ema.getTransaction().begin();
        //Query query = ema.createNamedQuery("Asistencia.findByCodigoEmpleado");
        //query.setParameter("codigoEmpleado", Integer.parseInt(Identificacion));
        Query query;
        query = ema.createNativeQuery("SELECT * FROM asistencia "
                + "WHERE codigoEmpleado = "+Identificacion+" AND "
                + "fechaAsistencia = '"+lbl_fechaHoy.getText()+"'", Asistencia.class);
        //List<Asistencia> emple = query.getResultList();
        try{
            //asistencia = emple.get(0);
            asistencia = (Asistencia)query.getSingleResult();
        }catch(javax.persistence.NoResultException e){
            asistencia = null;
        }catch(Exception e){
            System.out.println("Error inesperado");
        }
        
        ema.close();
        return asistencia;    
    }
    private void vaciarCampos(){
        lbl_horaEntrada.setText("");
        lbl_horaSalida.setText("");
        tf_nombre.setText("");
        tf_apellido.setText("");
        tf_identificacion.setText("");
        tf_cargo.setText("");
    }
    
    private String  calcularDiferencia(int entradaHora, int entradaMinuto, int salidaHora,
            int salidaMinuto){
        
        int hora = 0;
        int minuto = 0;
        String horasTrabajadas = "";
        if(salidaMinuto < entradaMinuto){
            hora = (salidaHora - entradaHora) - 1;
            minuto = salidaMinuto + entradaMinuto;
            if(hora < 10){
                horasTrabajadas = "0"+hora;
            }
            else{
               horasTrabajadas = ""+hora; 
            }
        }else{
            hora = salidaHora - entradaHora;
            minuto = salidaMinuto - entradaMinuto;
            if(hora < 10){
                horasTrabajadas = "0"+hora;
            }else{
                horasTrabajadas = ""+hora; 
            }
        }
        if (minuto < 10){
            horasTrabajadas = horasTrabajadas+":"+"0"+minuto;
        }else{
            horasTrabajadas = horasTrabajadas+":"+minuto;
        }
        //tf_horasTrabajas.setText(horasTrabajadas);
        return horasTrabajadas;
        
    }
    
    
}
